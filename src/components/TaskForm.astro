---
// TaskForm component for creating new tasks
---

<div class="bg-white rounded-lg shadow-md p-6 mb-8">
  <h2 class="text-2xl font-semibold text-gray-800 mb-4">Add New Task</h2>
  
  <!-- Alpine.js form validation and state management -->
  <form 
    x-data="{
      title: '',
      description: '',
      isSubmitting: false,
      errors: {},
      
      validateForm() {
        this.errors = {};
        if (!this.title.trim()) {
          this.errors.title = 'Title is required';
        }
        return Object.keys(this.errors).length === 0;
      },
      
      async submitForm() {
        if (!this.validateForm()) return;
        
        this.isSubmitting = true;
        
        try {
          const response = await fetch('/api/tasks', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              title: this.title,
              description: this.description
            })
          });
          
          if (response.ok) {
            this.title = '';
            this.description = '';
            // Trigger HTMX to refresh the tasks list
            htmx.trigger('#tasks-container', 'refreshTasks');
          } else {
            this.errors.submit = 'Failed to create task';
          }
        } catch (error) {
          this.errors.submit = 'Network error occurred';
        } finally {
          this.isSubmitting = false;
        }
      }
    }"
    @submit.prevent="submitForm()"
    class="space-y-4"
  >
    <div>
      <label for="title" class="block text-sm font-medium text-gray-700 mb-1">
        Task Title *
      </label>
      <input
        x-model="title"
        type="text"
        id="title"
        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
        :class="{'border-red-500': errors.title}"
        placeholder="Enter task title..."
      />
      <div x-show="errors.title" x-text="errors.title" class="text-red-500 text-sm mt-1"></div>
    </div>
    
    <div>
      <label for="description" class="block text-sm font-medium text-gray-700 mb-1">
        Description (optional)
      </label>
      <textarea
        x-model="description"
        id="description"
        rows="3"
        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
        placeholder="Enter task description..."
      ></textarea>
    </div>
    
    <div x-show="errors.submit" x-text="errors.submit" class="text-red-500 text-sm"></div>
    
    <button
      type="submit"
      :disabled="isSubmitting"
      class="w-full bg-primary-600 hover:bg-primary-700 disabled:bg-gray-400 text-white font-medium py-2 px-4 rounded-md transition-colors"
      :class="{'opacity-50 cursor-not-allowed': isSubmitting}"
    >
      <span x-show="!isSubmitting">Add Task</span>
      <span x-show="isSubmitting" class="flex items-center justify-center">
        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Adding...
      </span>
    </button>
  </form>
</div>
